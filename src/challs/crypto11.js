const path = require('path')
const { getBotConfig, genChallEmbed } = require(path.join(__dirname, '../util/util'))
const { themecolour } = getBotConfig()

const description = `
Let's play a game!

Here's how it works:

I'll give you an encrypted flag.

You can give me any ciphertext other than the one I give you and I'll do my best to decrypt it!

That's it!

Here's the encrypted flag:

\`\`\`437458184950480532468256405024208133561259884984314763670820222441776043399561956832078970454468868662149981831195266315218593782365318793189733016769904063371501959297347889390975049940865916234227054793860618370728687037102129172640640460534280025718911409932714982600713979022487588227365886940480604699379947804003525579516659471357552835427071000860958072426910108204246393058053602069884572752249071047311773236756892876141253015536037261850931529720454174573405289886610339878649220404759166687045505313163128186765447053805281396029036777882039899937636037798547385482114485507676391672818176235928771007354\`\`\`

And here's \`n\` and \`e\` in case you were curious:

\`\`\`n = 12271946967596059804027177975126204591448449918975690108816503743027213890502302995437953847053605272093403384138716658075737643921616552396453065949084097578963169736525145218522622105939164434540572403791336446552726008782524924844577342256179753555843346307141101096209828084489640624845116009718187216776697039845612075840060634618216990065696561059721929049533618169662344365954755076837439604475837329207362856326907549434417668876461238498764988097313526063920142656653169703566982878756403211418316267992402270315787267677488565758437846968842650571900440656787873150238455861331670130132143213699607300134589
e = 257\`\`\`

Note: Send your decryption request in the form \`crypto11.decrypt <ciphertext>\`

Please be nice!`

var chall = {
    challid: 'crypto11',
    title: 'RSA Level 7',
    category: 'Cryptography',
    points: 30,
    authorid: '111028987836313600',
    authorName: 'Joseph',
    flag: '1cc9e81151b9051ef348bf5c789580a5d20140e16abeb41f5fcb3e8c68321b24',
    description,
    desc: async function(msg) {
        
        let { challid, title, category, points, authorid, authorName, description } = chall

        var descEmbed = await genChallEmbed({
            challid, title, category, points, authorid, authorName, themecolour, description
        })

        msg.channel.send({ embed: descEmbed })
    },
    notes: [],
    init: () => {
        global.djsclient.on('message', crypto11DecryptListener)
    }
}

module.exports = chall

const bigInt = require('big-integer')

/* CHALLENGE SPOILERS */
function crypto11DecryptListener(msg) {
    if(!msg.content.startsWith('crypto11.decrypt')) return
    try {
        var [cmd, cstring] = msg.content.split(' ')
        if(cmd != 'crypto11.decrypt' || cstring.length >= 1500) {
            throw 'bad input'
        }
        if(cstring == '437458184950480532468256405024208133561259884984314763670820222441776043399561956832078970454468868662149981831195266315218593782365318793189733016769904063371501959297347889390975049940865916234227054793860618370728687037102129172640640460534280025718911409932714982600713979022487588227365886940480604699379947804003525579516659471357552835427071000860958072426910108204246393058053602069884572752249071047311773236756892876141253015536037261850931529720454174573405289886610339878649220404759166687045505313163128186765447053805281396029036777882039899937636037798547385482114485507676391672818176235928771007354') {
            msg.channel.send('I said I\'m not going to decrypt that!')
            return
        }
        var c = bigInt(cstring)
        var d = bigInt("4488572042622683352445738247711530084031728764138968366648837944920459555280997982767189344836727220143112521825055898284511044858490100876523689491104689386858124339429430546852632209954402555824178233293329283953137139399055809087121673821326446825872663629849274330909431283821113691577591069702371978120578116934286176047915618557926737588459079440225636654502383603490618825789185301874189490692886401229247048462298912149238803396750554116208303243767660627688927371869605639864481791399454664458288227020257893190006897858191134275830446622246384521827623883156564244249184021343427340351791809094590962662593")
        var n = bigInt("12271946967596059804027177975126204591448449918975690108816503743027213890502302995437953847053605272093403384138716658075737643921616552396453065949084097578963169736525145218522622105939164434540572403791336446552726008782524924844577342256179753555843346307141101096209828084489640624845116009718187216776697039845612075840060634618216990065696561059721929049533618169662344365954755076837439604475837329207362856326907549434417668876461238498764988097313526063920142656653169703566982878756403211418316267992402270315787267677488565758437846968842650571900440656787873150238455861331670130132143213699607300134589")
        var m = c.modPow(d, n).value.toString()
        var embed = {
            title: 'Your decryption has arrived!',
            description: `\`${m}\``,
            footer: {
                icon_url: msg.author.displayAvatarURL,
                text: `crypto11 decryption request made by ${msg.author.username}`  
            },
            color: themecolour
        }
        msg.channel.send({ embed })
        console.log('COMMAND LOG:', msg.author.username + '#' + msg.author.discriminator, msg.content)
    } catch(e) {
        console.log(e)
        msg.channel.send('Ensure your decryption request is in the form \`crypto11.decrypt <ciphertext>\` where \`<ciphertext>\` is a positive integer less than 1500 digits long.')
    }
}